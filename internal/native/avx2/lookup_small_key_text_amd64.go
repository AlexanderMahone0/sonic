// +build amd64
// Code generated by asm2asm, DO NOT EDIT.

package avx2

var _text_lookup_small_key = []byte{
	// .p2align 5, 0x00
	// LCPI0_0
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, // QUAD $0x4040404040404040; QUAD $0x4040404040404040  // .space 16, '@@@@@@@@@@@@@@@@'
	0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x40, //0x00000010 QUAD $0x4040404040404040; QUAD $0x4040404040404040  // .space 16, '@@@@@@@@@@@@@@@@'
	//0x00000020 LCPI0_1
	0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, //0x00000020 QUAD $0x5a5a5a5a5a5a5a5a; QUAD $0x5a5a5a5a5a5a5a5a  // .space 16, 'ZZZZZZZZZZZZZZZZ'
	0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, //0x00000030 QUAD $0x5a5a5a5a5a5a5a5a; QUAD $0x5a5a5a5a5a5a5a5a  // .space 16, 'ZZZZZZZZZZZZZZZZ'
	//0x00000040 LCPI0_2
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, //0x00000040 QUAD $0x0101010101010101; QUAD $0x0101010101010101  // .space 16, '\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, //0x00000050 QUAD $0x0101010101010101; QUAD $0x0101010101010101  // .space 16, '\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01\x01'
	//0x00000060 .p2align 4, 0x90
	//0x00000060 _lookup_small_key
	0x55, //0x00000060 pushq        %rbp
	0x48, 0x89, 0xe5, //0x00000061 movq         %rsp, %rbp
	0x41, 0x57, //0x00000064 pushq        %r15
	0x41, 0x56, //0x00000066 pushq        %r14
	0x41, 0x55, //0x00000068 pushq        %r13
	0x41, 0x54, //0x0000006a pushq        %r12
	0x53, //0x0000006c pushq        %rbx
	0x48, 0x83, 0xec, 0x04, //0x0000006d subq         $4, %rsp
	0x48, 0x8b, 0x4f, 0x08, //0x00000071 movq         $8(%rdi), %rcx
	0x4c, 0x8b, 0x1e, //0x00000075 movq         (%rsi), %r11
	0x44, 0x0f, 0xb6, 0xc1, //0x00000078 movzbl       %cl, %r8d
	0x4b, 0x8d, 0x34, 0x80, //0x0000007c leaq         (%r8,%r8,4), %rsi
	0x45, 0x0f, 0xb6, 0x0c, 0x33, //0x00000080 movzbl       (%r11,%rsi), %r9d
	0x48, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, //0x00000085 movq         $-1, %rax
	0x45, 0x85, 0xc9, //0x0000008c testl        %r9d, %r9d
	0x0f, 0x84, 0xae, 0x02, 0x00, 0x00, //0x0000008f je           LBB0_37
	0x4c, 0x8b, 0x37, //0x00000095 movq         (%rdi), %r14
	0x45, 0x8b, 0x54, 0x33, 0x01, //0x00000098 movl         $1(%r11,%rsi), %r10d
	0x41, 0x8d, 0xb2, 0xa5, 0x00, 0x00, 0x00, //0x0000009d leal         $165(%r10), %esi
	0x4c, 0x01, 0xde, //0x000000a4 addq         %r11, %rsi
	0x0f, 0xb6, 0xc9, //0x000000a7 movzbl       %cl, %ecx
	0x41, 0x83, 0xf8, 0x09, //0x000000aa cmpl         $9, %r8d
	0x0f, 0x83, 0xc8, 0x00, 0x00, 0x00, //0x000000ae jae          LBB0_2
	0x45, 0x8a, 0x26, //0x000000b4 movb         (%r14), %r12b
	0x45, 0x8d, 0x78, 0x01, //0x000000b7 leal         $1(%r8), %r15d
	0x44, 0x89, 0xcf, //0x000000bb movl         %r9d, %edi
	0x90, 0x90, //0x000000be .p2align 4, 0x90
	//0x000000c0 LBB0_6
	0x44, 0x38, 0x26, //0x000000c0 cmpb         %r12b, (%rsi)
	0x0f, 0x85, 0x97, 0x00, 0x00, 0x00, //0x000000c3 jne          LBB0_7
	0x44, 0x0f, 0xb6, 0x6e, 0x01, //0x000000c9 movzbl       $1(%rsi), %r13d
	0xbb, 0x01, 0x00, 0x00, 0x00, //0x000000ce movl         $1, %ebx
	0x45, 0x3a, 0x6e, 0x01, //0x000000d3 cmpb         $1(%r14), %r13b
	0x0f, 0x85, 0x85, 0x00, 0x00, 0x00, //0x000000d7 jne          LBB0_15
	0x44, 0x0f, 0xb6, 0x6e, 0x02, //0x000000dd movzbl       $2(%rsi), %r13d
	0xbb, 0x02, 0x00, 0x00, 0x00, //0x000000e2 movl         $2, %ebx
	0x45, 0x3a, 0x6e, 0x02, //0x000000e7 cmpb         $2(%r14), %r13b
	0x0f, 0x85, 0x71, 0x00, 0x00, 0x00, //0x000000eb jne          LBB0_15
	0x44, 0x0f, 0xb6, 0x6e, 0x03, //0x000000f1 movzbl       $3(%rsi), %r13d
	0xbb, 0x03, 0x00, 0x00, 0x00, //0x000000f6 movl         $3, %ebx
	0x45, 0x3a, 0x6e, 0x03, //0x000000fb cmpb         $3(%r14), %r13b
	0x0f, 0x85, 0x5d, 0x00, 0x00, 0x00, //0x000000ff jne          LBB0_15
	0x44, 0x0f, 0xb6, 0x6e, 0x04, //0x00000105 movzbl       $4(%rsi), %r13d
	0xbb, 0x04, 0x00, 0x00, 0x00, //0x0000010a movl         $4, %ebx
	0x45, 0x3a, 0x6e, 0x04, //0x0000010f cmpb         $4(%r14), %r13b
	0x0f, 0x85, 0x49, 0x00, 0x00, 0x00, //0x00000113 jne          LBB0_15
	0x44, 0x0f, 0xb6, 0x6e, 0x05, //0x00000119 movzbl       $5(%rsi), %r13d
	0xbb, 0x05, 0x00, 0x00, 0x00, //0x0000011e movl         $5, %ebx
	0x45, 0x3a, 0x6e, 0x05, //0x00000123 cmpb         $5(%r14), %r13b
	0x0f, 0x85, 0x35, 0x00, 0x00, 0x00, //0x00000127 jne          LBB0_15
	0x44, 0x0f, 0xb6, 0x6e, 0x06, //0x0000012d movzbl       $6(%rsi), %r13d
	0xbb, 0x06, 0x00, 0x00, 0x00, //0x00000132 movl         $6, %ebx
	0x45, 0x3a, 0x6e, 0x06, //0x00000137 cmpb         $6(%r14), %r13b
	0x0f, 0x85, 0x21, 0x00, 0x00, 0x00, //0x0000013b jne          LBB0_15
	0x44, 0x0f, 0xb6, 0x6e, 0x07, //0x00000141 movzbl       $7(%rsi), %r13d
	0x31, 0xdb, //0x00000146 xorl         %ebx, %ebx
	0x45, 0x3a, 0x6e, 0x07, //0x00000148 cmpb         $7(%r14), %r13b
	0x0f, 0x94, 0xc3, //0x0000014c sete         %bl
	0x48, 0x83, 0xc3, 0x07, //0x0000014f addq         $7, %rbx
	0xe9, 0x0a, 0x00, 0x00, 0x00, //0x00000153 jmp          LBB0_15
	0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, //0x00000158 .p2align 4, 0x90
	//0x00000160 LBB0_7
	0x31, 0xdb, //0x00000160 xorl         %ebx, %ebx
	//0x00000162 LBB0_15
	0x48, 0x39, 0xcb, //0x00000162 cmpq         %rcx, %rbx
	0x0f, 0x83, 0xd4, 0x01, 0x00, 0x00, //0x00000165 jae          LBB0_22
	0x4c, 0x01, 0xfe, //0x0000016b addq         %r15, %rsi
	0x83, 0xc7, 0xff, //0x0000016e addl         $-1, %edi
	0x0f, 0x85, 0x49, 0xff, 0xff, 0xff, //0x00000171 jne          LBB0_6
	0xe9, 0x44, 0x00, 0x00, 0x00, //0x00000177 jmp          LBB0_17
	//0x0000017c LBB0_2
	0xc4, 0xc1, 0x7e, 0x6f, 0x06, //0x0000017c vmovdqu      (%r14), %ymm0
	0x49, 0xc7, 0xc4, 0xff, 0xff, 0xff, 0xff, //0x00000181 movq         $-1, %r12
	0x49, 0xd3, 0xe4, //0x00000188 shlq         %cl, %r12
	0x45, 0x8d, 0x78, 0x01, //0x0000018b leal         $1(%r8), %r15d
	0x44, 0x89, 0xcb, //0x0000018f movl         %r9d, %ebx
	0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, //0x00000192 .p2align 4, 0x90
	//0x000001a0 LBB0_3
	0xc5, 0xfd, 0x74, 0x0e, //0x000001a0 vpcmpeqb     (%rsi), %ymm0, %ymm1
	0xc5, 0xfd, 0xd7, 0xf9, //0x000001a4 vpmovmskb    %ymm1, %edi
	0x44, 0x09, 0xe7, //0x000001a8 orl          %r12d, %edi
	0x83, 0xff, 0xff, //0x000001ab cmpl         $-1, %edi
	0x0f, 0x84, 0x8b, 0x01, 0x00, 0x00, //0x000001ae je           LBB0_22
	0x4c, 0x01, 0xfe, //0x000001b4 addq         %r15, %rsi
	0x83, 0xc3, 0xff, //0x000001b7 addl         $-1, %ebx
	0x0f, 0x85, 0xe0, 0xff, 0xff, 0xff, //0x000001ba jne          LBB0_3
	//0x000001c0 LBB0_17
	0x48, 0x83, 0xfa, 0xff, //0x000001c0 cmpq         $-1, %rdx
	0x0f, 0x84, 0x79, 0x01, 0x00, 0x00, //0x000001c4 je           LBB0_37
	0x49, 0x01, 0xd2, //0x000001ca addq         %rdx, %r10
	0xc4, 0xc1, 0x7e, 0x6f, 0x06, //0x000001cd vmovdqu      (%r14), %ymm0
	0xc5, 0xfd, 0x64, 0x0d, 0x26, 0xfe, 0xff, 0xff, //0x000001d2 vpcmpgtb     $-474(%rip), %ymm0, %ymm1  /* LCPI0_0+0(%rip) */
	0xc5, 0xfe, 0x6f, 0x15, 0x3e, 0xfe, 0xff, 0xff, //0x000001da vmovdqu      $-450(%rip), %ymm2  /* LCPI0_1+0(%rip) */
	0xc5, 0xed, 0x64, 0xd0, //0x000001e2 vpcmpgtb     %ymm0, %ymm2, %ymm2
	0xc5, 0xed, 0xdb, 0xc9, //0x000001e6 vpand        %ymm1, %ymm2, %ymm1
	0xc5, 0xf5, 0xdb, 0x0d, 0x4e, 0xfe, 0xff, 0xff, //0x000001ea vpand        $-434(%rip), %ymm1, %ymm1  /* LCPI0_2+0(%rip) */
	0x4d, 0x01, 0xd3, //0x000001f2 addq         %r10, %r11
	0xc5, 0xf5, 0x71, 0xf1, 0x05, //0x000001f5 vpsllw       $5, %ymm1, %ymm1
	0xc5, 0xf5, 0xfc, 0xc0, //0x000001fa vpaddb       %ymm0, %ymm1, %ymm0
	0x41, 0x83, 0xf8, 0x09, //0x000001fe cmpl         $9, %r8d
	0x0f, 0x83, 0xe4, 0x00, 0x00, 0x00, //0x00000202 jae          LBB0_19
	0xc4, 0xc3, 0x79, 0x14, 0xc6, 0x01, //0x00000208 vpextrb      $1, %xmm0, %r14d
	0xc4, 0xc3, 0x79, 0x14, 0xc4, 0x02, //0x0000020e vpextrb      $2, %xmm0, %r12d
	0xc4, 0xc3, 0x79, 0x14, 0xc5, 0x03, //0x00000214 vpextrb      $3, %xmm0, %r13d
	0xc4, 0xc3, 0x79, 0x14, 0xc2, 0x04, //0x0000021a vpextrb      $4, %xmm0, %r10d
	0xc4, 0xc3, 0x79, 0x14, 0xc7, 0x05, //0x00000220 vpextrb      $5, %xmm0, %r15d
	0xc4, 0xe3, 0x79, 0x14, 0xc2, 0x06, //0x00000226 vpextrb      $6, %xmm0, %edx
	0xc5, 0xf9, 0x7e, 0xc3, //0x0000022c vmovd        %xmm0, %ebx
	0xc4, 0xe3, 0x79, 0x14, 0xc6, 0x07, //0x00000230 vpextrb      $7, %xmm0, %esi
	0x89, 0x75, 0xd4, //0x00000236 movl         %esi, $-44(%rbp)
	0x41, 0x83, 0xc0, 0x01, //0x00000239 addl         $1, %r8d
	0x41, 0x83, 0xf9, 0x02, //0x0000023d cmpl         $2, %r9d
	0xbf, 0x01, 0x00, 0x00, 0x00, //0x00000241 movl         $1, %edi
	0x41, 0x0f, 0x43, 0xf9, //0x00000246 cmovael      %r9d, %edi
	0x90, 0x90, 0x90, 0x90, 0x90, 0x90, //0x0000024a .p2align 4, 0x90
	//0x00000250 LBB0_24
	0x41, 0x38, 0x1b, //0x00000250 cmpb         %bl, (%r11)
	0x0f, 0x85, 0x77, 0x00, 0x00, 0x00, //0x00000253 jne          LBB0_25
	0xbe, 0x01, 0x00, 0x00, 0x00, //0x00000259 movl         $1, %esi
	0x45, 0x38, 0x73, 0x01, //0x0000025e cmpb         %r14b, $1(%r11)
	0x0f, 0x85, 0x6a, 0x00, 0x00, 0x00, //0x00000262 jne          LBB0_33
	0xbe, 0x02, 0x00, 0x00, 0x00, //0x00000268 movl         $2, %esi
	0x45, 0x38, 0x63, 0x02, //0x0000026d cmpb         %r12b, $2(%r11)
	0x0f, 0x85, 0x5b, 0x00, 0x00, 0x00, //0x00000271 jne          LBB0_33
	0xbe, 0x03, 0x00, 0x00, 0x00, //0x00000277 movl         $3, %esi
	0x45, 0x38, 0x6b, 0x03, //0x0000027c cmpb         %r13b, $3(%r11)
	0x0f, 0x85, 0x4c, 0x00, 0x00, 0x00, //0x00000280 jne          LBB0_33
	0xbe, 0x04, 0x00, 0x00, 0x00, //0x00000286 movl         $4, %esi
	0x45, 0x38, 0x53, 0x04, //0x0000028b cmpb         %r10b, $4(%r11)
	0x0f, 0x85, 0x3d, 0x00, 0x00, 0x00, //0x0000028f jne          LBB0_33
	0xbe, 0x05, 0x00, 0x00, 0x00, //0x00000295 movl         $5, %esi
	0x45, 0x38, 0x7b, 0x05, //0x0000029a cmpb         %r15b, $5(%r11)
	0x0f, 0x85, 0x2e, 0x00, 0x00, 0x00, //0x0000029e jne          LBB0_33
	0xbe, 0x06, 0x00, 0x00, 0x00, //0x000002a4 movl         $6, %esi
	0x41, 0x38, 0x53, 0x06, //0x000002a9 cmpb         %dl, $6(%r11)
	0x0f, 0x85, 0x1f, 0x00, 0x00, 0x00, //0x000002ad jne          LBB0_33
	0x31, 0xf6, //0x000002b3 xorl         %esi, %esi
	0x41, 0x89, 0xd1, //0x000002b5 movl         %edx, %r9d
	0x8b, 0x55, 0xd4, //0x000002b8 movl         $-44(%rbp), %edx
	0x41, 0x38, 0x53, 0x07, //0x000002bb cmpb         %dl, $7(%r11)
	0x44, 0x89, 0xca, //0x000002bf movl         %r9d, %edx
	0x40, 0x0f, 0x94, 0xc6, //0x000002c2 sete         %sil
	0x48, 0x83, 0xc6, 0x07, //0x000002c6 addq         $7, %rsi
	0xe9, 0x03, 0x00, 0x00, 0x00, //0x000002ca jmp          LBB0_33
	0x90, //0x000002cf .p2align 4, 0x90
	//0x000002d0 LBB0_25
	0x31, 0xf6, //0x000002d0 xorl         %esi, %esi
	//0x000002d2 LBB0_33
	0x48, 0x39, 0xce, //0x000002d2 cmpq         %rcx, %rsi
	0x0f, 0x83, 0x61, 0x00, 0x00, 0x00, //0x000002d5 jae          LBB0_21
	0x4d, 0x01, 0xc3, //0x000002db addq         %r8, %r11
	0x83, 0xc7, 0xff, //0x000002de addl         $-1, %edi
	0x0f, 0x85, 0x69, 0xff, 0xff, 0xff, //0x000002e1 jne          LBB0_24
	0xe9, 0x57, 0x00, 0x00, 0x00, //0x000002e7 jmp          LBB0_37
	//0x000002ec LBB0_19
	0x48, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, //0x000002ec movq         $-1, %rax
	0x48, 0xd3, 0xe0, //0x000002f3 shlq         %cl, %rax
	0x41, 0x83, 0xc0, 0x01, //0x000002f6 addl         $1, %r8d
	0x41, 0x83, 0xf9, 0x02, //0x000002fa cmpl         $2, %r9d
	0xba, 0x01, 0x00, 0x00, 0x00, //0x000002fe movl         $1, %edx
	0x41, 0x0f, 0x43, 0xd1, //0x00000303 cmovael      %r9d, %edx
	0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, 0x90, //0x00000307 .p2align 4, 0x90
	//0x00000310 LBB0_20
	0xc4, 0xc1, 0x7d, 0x74, 0x0b, //0x00000310 vpcmpeqb     (%r11), %ymm0, %ymm1
	0xc5, 0xfd, 0xd7, 0xf1, //0x00000315 vpmovmskb    %ymm1, %esi
	0x09, 0xc6, //0x00000319 orl          %eax, %esi
	0x83, 0xfe, 0xff, //0x0000031b cmpl         $-1, %esi
	0x0f, 0x84, 0x18, 0x00, 0x00, 0x00, //0x0000031e je           LBB0_21
	0x4d, 0x01, 0xc3, //0x00000324 addq         %r8, %r11
	0x83, 0xc2, 0xff, //0x00000327 addl         $-1, %edx
	0x0f, 0x85, 0xe0, 0xff, 0xff, 0xff, //0x0000032a jne          LBB0_20
	0x48, 0xc7, 0xc0, 0xff, 0xff, 0xff, 0xff, //0x00000330 movq         $-1, %rax
	0xe9, 0x07, 0x00, 0x00, 0x00, //0x00000337 jmp          LBB0_37
	//0x0000033c LBB0_21
	0x4c, 0x89, 0xde, //0x0000033c movq         %r11, %rsi
	//0x0000033f LBB0_22
	0x0f, 0xb6, 0x04, 0x0e, //0x0000033f movzbl       (%rsi,%rcx), %eax
	//0x00000343 LBB0_37
	0x48, 0x83, 0xc4, 0x04, //0x00000343 addq         $4, %rsp
	0x5b, //0x00000347 popq         %rbx
	0x41, 0x5c, //0x00000348 popq         %r12
	0x41, 0x5d, //0x0000034a popq         %r13
	0x41, 0x5e, //0x0000034c popq         %r14
	0x41, 0x5f, //0x0000034e popq         %r15
	0x5d, //0x00000350 popq         %rbp
	0xc5, 0xf8, 0x77, //0x00000351 vzeroupper   
	0xc3, //0x00000354 retq         
}
 
